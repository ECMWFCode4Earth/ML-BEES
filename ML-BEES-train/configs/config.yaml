clim_feats:
  - clim_clake
  - clim_ldepth
  - clim_ctype
  - clim_cell_area
  - clim_landsea
  - clim_glm
  - clim_cu
  - clim_cvh
  - clim_cvl
###
  # - clim_tvh
  # - clim_tvl
  # - clim_sotype
###
  - clim_geopot
  - clim_sdfor
  - clim_sdor
  - clim_theta_cap
  - clim_theta_pwp
  - clim_veg_covh
  - clim_veg_covl
  - clim_veg_z0mh
  - clim_veg_z0ml
  - clim_veg_rsminh
  - clim_veg_rsminl

dynamic_feats:
  - met_ctpf
  - met_lwdown
  - met_psurf
  - met_qair
  - met_rainf
  - met_swdown
  - met_snowf
  - met_tair
  - met_wind_e
  - met_wind_n
  - lai_hv
  - lai_lv

targets_prog:
  - swvl1
  - swvl2
  - swvl3
  - stl1
  - stl2
  - stl3
  - snowc
  #- rsn
  #- sd
  #- tsn
  #- es
  #- aco2gpp
  #- dis
  #- e
  #- sro
  #- ssro

targets_diag:
  - d2m
  - t2m
  - skt
  - sshf
  - slhf
  - aco2gpp
  - dis
  - e
  - sro
  - ssro

file_path: "/home/ssd4tb/shams/ecland/ecland_i6aj_o400_2010_2022_6h_euro.zarr"
#file_path: "/home/ssd4tb/shams/ecland/ecland_i8ki_o200_2010_2022_6h.zarr"

smap_file: "/home/ssd4tb/shams/ecland/smap_sm_interp.zarr"
modis_temp_file: "/home/ssd4tb/shams/ecland/modis_temp_interp.zarr"
lail_file: "/home/ssd4tb/shams/ecland/lail_interp.zarr"
laih_file: "/home/ssd4tb/shams/ecland/laih_interp.zarr"

use_time_var_lai: False

training_start: 2010
training_end: 2019

validation_start: 2020
validation_end: 2020

test_start: 2021
test_end: 2022

x_slice_indices:
  - 0  # 31294
  - None  # 32294

roll_out: 1
is_add_lat_lon: True  # add spatial encoding based on latitudes and longitudes, this will add 4 more features
is_norm: True  # normalize the input data
point_dropout: 0.   # ratio of points to be randomly dropped during training
random_seed: 0

graph_type: 'distance-graph'  # type of graph to be constructed there are two options: 'knn_graph' adn 'distance_graph'
d_graph: 70  # connect points within the distance d_graph. d_graph is in KM and only for 'distance_graph' type
k_graph: 8  # connect points to their k_graph nearest points. k_graph is only for 'knn_graph' type
max_num_points: 100  # maximum number of neighbored points to return for each node. Returned neighbors are chosen randomly. Only for 'distance_graph' type

model: 'UniMP'  # name of the GNN model to be used

# Mamba parameters
d_state: 64  # SSM state expansion factor
d_conv: 4  # local convolution width
expand: 2  # block expansion factor
dt_min: 0.01  # minimum delta t
dt_max: 0.1  # maximum delta t

batch_size: 8
num_workers: 8
hidden_dim: 32
heads: 3
dropout: 0.0
n_epochs: 100
pin_memory: True
persistent_workers: False
devices: "0"

optimizer: "Adam"
lr: 0.002
weight_decay: 0.0003
beta1: 0.9
beta2: 0.999
lr_scheduler: "cosine"
lr_warmup: 0.00001
lr_warmup_epochs: 0
lr_min: 0.0003
lr_decay_step: 20
lr_decay_rate: 0.9

# model checkpoint for test/inference
pretrained: "/home/hdd16tb/shams/log_ecmwf/log_4/UniMP_25/model_checkpoints/best_loss_model.pth"

logging:
  location: "../log_test"
  name: "test"
